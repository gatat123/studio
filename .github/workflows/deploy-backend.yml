name: Deploy Backend to Railway

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

env:
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: studio_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Setup test database
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/studio_test
        run: |
          npx prisma generate
          npx prisma migrate deploy
      
      - name: Run tests
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/studio_test
          JWT_SECRET: test-secret
          JWT_REFRESH_SECRET: test-refresh-secret
        run: |
          npm run test
          npm run test:e2e
      
      - name: Run linting
        working-directory: ./backend
        run: npm run lint
  
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to Railway Staging
        working-directory: ./backend
        run: |
          railway up --service backend-staging \
            --environment staging \
            --detach
  
  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Create database backup
        run: |
          railway run --service postgres \
            --environment production \
            pg_dump $DATABASE_URL > backup-$(date +%Y%m%d-%H%M%S).sql
      
      - name: Upload backup to storage
        uses: actions/upload-artifact@v3
        with:
          name: database-backup-${{ github.run_number }}
          path: backup-*.sql
          retention-days: 30
      
      - name: Deploy to Railway Production
        working-directory: ./backend
        run: |
          railway up --service backend \
            --environment production \
            --detach
      
      - name: Health check
        run: |
          sleep 30
          curl -f https://studio-backend-production.up.railway.app/health || exit 1
      
      - name: Notify deployment
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Backend deployed successfully to production!'
            })
