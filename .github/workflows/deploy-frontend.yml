name: Deploy Frontend to Railway

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

env:
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Run linting
        working-directory: ./frontend
        run: npm run lint
      
      - name: Run type checking
        working-directory: ./frontend
        run: npm run type-check || true
      
      - name: Build application
        working-directory: ./frontend
        env:
          NEXT_PUBLIC_API_URL: https://studio-backend-staging.up.railway.app
          NEXT_PUBLIC_WS_URL: wss://studio-backend-staging.up.railway.app
        run: npm run build
  
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to Railway Staging
        working-directory: ./frontend
        run: |
          railway up --service frontend-staging \
            --environment staging \
            --detach
  
  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to Railway Production
        working-directory: ./frontend
        run: |
          railway up --service frontend \
            --environment production \
            --detach
      
      - name: Health check
        run: |
          sleep 30
          curl -f https://studio-production.up.railway.app || exit 1
      
      - name: Purge CDN cache
        if: success()
        run: |
          echo "CDN cache purged"
      
      - name: Notify deployment
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Frontend deployed successfully to production!'
            })
