# 스토리보드 협업 플랫폼 PRD

## 프로젝트 개요
그림 작가와 원활한 커뮤니케이션을 위한 웹 기반 스토리보드 협업 플랫폼 개발

## 기술 스택
- Frontend: Next.js 14 (App Router)
- Backend: NestJS
- Database: PostgreSQL (Railway)
- Storage: Volume 기반 파일 저장
- Authentication: JWT
- Real-time: WebSocket

## 핵심 기능 요구사항

### 1. 인증 시스템
- 이메일/패스워드 기반 로그인
- 회원가입 (이메일 인증)
- 프로필 관리 (닉네임, 아바타)
- JWT 기반 세션 관리
- Remember Me 기능 (7일 유지)

### 2. 스튜디오 관리
- 스튜디오 생성/수정/삭제
- 멤버 초대 (이메일/링크)
- 역할 관리 (Admin, Editor, Viewer)
- 스튜디오 대시보드 (통계, 활동 피드)
- 스튜디오 설정 관리

### 3. 프로젝트 관리
- 프로젝트 CRUD 작업
- 프로젝트 상태 관리 (planning, in_progress, review, completed)
- 프로젝트 삭제 (소프트/즉시 삭제)
- 초대코드 생성/관리
- 프로젝트 카테고리 (webtoon, illustration, storyboard, concept)

### 4. 씬(Scene) 관리
- 다중 파일 업로드 (드래그앤드롭)
- 씬 순서 변경 (드래그앤드롭)
- 초안/아트워크 버전 관리
- 썸네일 생성
- 버전 히스토리
- 일괄 작업 (선택, 삭제, 이동)

### 5. 협업 기능
- 위치 기반 댓글 시스템
- 댓글 스레드/답글
- 멘션 기능 (@사용자)
- 파일 첨부
- 실시간 알림 (WebSocket)
- 활동 로그

### 6. 파일 관리
- 이미지 업로드 (JPEG, PNG, WebP)
- PDF 업로드/뷰어
- 파일 압축 및 최적화
- 썸네일 자동 생성
- Volume 저장소 관리

### 7. 실시간 기능
- WebSocket 기반 실시간 통신
- 온라인 사용자 표시
- 타이핑 인디케이터
- 실시간 씬 업데이트
- 브라우저 알림

### 8. 데이터 영속성
- 모든 작업 즉시 DB 저장
- 세션 복구 기능
- 자동 저장
- 백업/복구 시스템

## 비기능 요구사항
- 반응형 디자인 (모바일 지원)
- 성능 최적화 (이미지 lazy loading)
- 에러 처리 및 복구
- 보안 (CORS, Rate limiting)
- SEO 최적화

## 배포 요구사항
- Railway 플랫폼 배포
- PostgreSQL 데이터베이스
- Volume 스토리지 설정
- 환경 변수 관리
- CI/CD 파이프라인

## 개발 우선순위
1. Phase 1 (Core): 인증, 스튜디오, 프로젝트 기본 기능
2. Phase 2 (Essential): 삭제 기능, 초대코드, 다중 업로드
3. Phase 3 (Collaboration): 댓글, 실시간 알림, 버전 관리
4. Phase 4 (Polish): UI/UX 개선, 성능 최적화
5. Phase 5 (Deploy): Railway 배포, 모니터링

## 성공 지표
- 데이터 영속성 100% 보장
- 다중 파일 업로드 안정성
- 실시간 협업 원활함
- 사용자 경험 만족도
- 시스템 안정성 99.9%